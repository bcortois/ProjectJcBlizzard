<?php
require $_SERVER['DOCUMENT_ROOT'] . '/vendor/autoload.php';
$feedback = new \CNetworks\Helpers\Bll\Feedback();
$controller = new \CNetworks\EyeVent\Controller($feedback);
$controller->initRequestScanner();
?>
<html>
<head>
    <title></title>
    <link rel="stylesheet" type="text/css" href="../css/cnetworks.eyevent-0.1.css">
</head>
<body>
<!-- this container holds the buttons which navigate through the calendar. The first one shows the previous month on the current calendar and the seconde one shows the next month.
these button's get assigned an eventlistener to handle the functionality. -->
<div id="calendar-controls">
    <input type="button" id="calendar-month-decrease" value="<" />
    <input type="button" id="calendar-month-increase" value=">" />
</div>
<!-- this container is used to store and manipulate the calendar wich is created through functions -->
<div id="calendar">
</div>
<!-- this container is used to store and manipulate a selectOne of an event on the calendar. -->
<div id="event-detail">
</div>
<!-- the functions deeded for the operation of the event calendar are stored in these files. -->
<!-- the they could have reside in the same file because the functions are inseparable. -->
<script src="../js/cnetworks.event-calendar-0.2.js"></script>
<script src="../js/cnetworks.load-event-0.1.js"></script>
<script>
    // initCal creates the html for the calendar on a specific month and year, if no argments are supplied then it defaults to current date of the system.
    Calendar.initCal();
    // attachCal takes an id of a element as parameter, it then appends the html code generated by initCal to the element.
    // before doing that it clears the specified element.
    Calendar.attachCal('calendar');
    // loadEvents is a function that uses other functions to fill the calendar with events. If there arent any events stored yet then it will collect them trough an ajax function.
    EventController.loadEvents();
</script>
</body>
</html>